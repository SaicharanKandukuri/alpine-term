diff -uNr qemu-4.2.0/slirp/src/slirp.c qemu-4.2.0.mod/slirp/src/slirp.c
--- qemu-4.2.0/slirp/src/slirp.c	2019-12-15 01:16:13.939336615 +0200
+++ qemu-4.2.0.mod/slirp/src/slirp.c	2019-12-15 02:40:13.178039909 +0200
@@ -118,6 +118,7 @@
 
 #else
 
+#if 0
 static int get_dns_addr_cached(void *pdns_addr, void *cached_addr,
                                socklen_t addrlen, struct stat *cached_stat,
                                unsigned *cached_time)
@@ -143,71 +144,57 @@
     }
     return 1;
 }
+#endif
 
 static int get_dns_addr_resolv_conf(int af, void *pdns_addr, void *cached_addr,
                                     socklen_t addrlen, uint32_t *scope_id,
                                     unsigned *cached_time)
 {
-    char buff[512];
-    char buff2[257];
-    FILE *f;
-    int found = 0;
     void *tmp_addr = alloca(addrlen);
+    char *env_dns_addr = getenv("CONFIG_QEMU_DNS");
+    int found = 1;
     unsigned if_index;
 
-    char *prefixed_resolvconf_path = android_dynamic_path_prefix("/etc/resolv.conf");
-    f = fopen(prefixed_resolvconf_path, "r");
-    if (!f) {
-        free(prefixed_resolvconf_path);
-        return -1;
+    if (!env_dns_addr || !inet_pton(af, env_dns_addr, tmp_addr)) {
+        if (af == AF_INET) {
+            if (!inet_pton(AF_INET, "1.1.1.1", tmp_addr)) {
+                found = 0;
+            }
+        } else {
+            if (!inet_pton(AF_INET6, "2606:4700:4700::1111", tmp_addr)) {
+                found = 0;
+            }
+        }
     }
-    free(prefixed_resolvconf_path);
 
-    DEBUG_MISC("IP address of your DNS(s):");
-    while (fgets(buff, 512, f) != NULL) {
-        if (sscanf(buff, "nameserver%*[ \t]%256s", buff2) == 1) {
-            char *c = strchr(buff2, '%');
-            if (c) {
-                if_index = if_nametoindex(c + 1);
-                *c = '\0';
-            } else {
-                if_index = 0;
-            }
+    char *c = strchr(env_dns_addr, '%');
 
-            if (!inet_pton(af, buff2, tmp_addr)) {
-                continue;
-            }
-            /* If it's the first one, set it to dns_addr */
-            if (!found) {
-                memcpy(pdns_addr, tmp_addr, addrlen);
-                memcpy(cached_addr, tmp_addr, addrlen);
-                if (scope_id) {
-                    *scope_id = if_index;
-                }
-                *cached_time = curtime;
-            }
+    if (c) {
+        if_index = if_nametoindex(c + 1);
+        *c = '\0';
+    } else {
+        if_index = 0;
+    }
 
-            if (++found > 3) {
-                DEBUG_MISC("  (more)");
-                break;
-            } else if (slirp_debug & DBG_MISC) {
-                char s[INET6_ADDRSTRLEN];
-                const char *res = inet_ntop(af, tmp_addr, s, sizeof(s));
-                if (!res) {
-                    res = "  (string conversion error)";
-                }
-                DEBUG_MISC("  %s", res);
-            }
-        }
+    memcpy(pdns_addr, tmp_addr, addrlen);
+    memcpy(cached_addr, tmp_addr, addrlen);
+
+    if (scope_id) {
+        *scope_id = if_index;
     }
-    fclose(f);
-    if (!found)
+
+    *cached_time = curtime;
+
+    if (!found) {
         return -1;
+    }
+
     return 0;
 }
 
 int get_dns_addr(struct in_addr *pdns_addr)
 {
+#if 0
     static struct stat dns_addr_stat;
 
     if (dns_addr.s_addr != 0) {
@@ -218,12 +205,14 @@
             return ret;
         }
     }
+#endif
     return get_dns_addr_resolv_conf(AF_INET, pdns_addr, &dns_addr,
                                     sizeof(dns_addr), NULL, &dns_addr_time);
 }
 
 int get_dns6_addr(struct in6_addr *pdns6_addr, uint32_t *scope_id)
 {
+#if 0
     static struct stat dns6_addr_stat;
 
     if (!in6_zero(&dns6_addr)) {
@@ -234,6 +223,7 @@
             return ret;
         }
     }
+#endif
     return get_dns_addr_resolv_conf(AF_INET6, pdns6_addr, &dns6_addr,
                                     sizeof(dns6_addr), scope_id,
                                     &dns6_addr_time);
